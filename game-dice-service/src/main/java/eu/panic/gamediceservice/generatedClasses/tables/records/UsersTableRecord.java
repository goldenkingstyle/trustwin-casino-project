/*
 * This file is generated by jOOQ.
 */
package eu.panic.gamediceservice.generatedClasses.tables.records;


import eu.panic.gamediceservice.generatedClasses.tables.UsersTable;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record17;
import org.jooq.Row17;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersTableRecord extends UpdatableRecordImpl<UsersTableRecord> implements Record17<Long, Long, Short, String, Short, String, String, String, Boolean, Boolean, String, String, String, String, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users_table.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.users_table.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.users_table.balance</code>.
     */
    public void setBalance(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.users_table.balance</code>.
     */
    public Long getBalance() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.users_table.authorize_type</code>.
     */
    public void setAuthorizeType(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.users_table.authorize_type</code>.
     */
    public Short getAuthorizeType() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.users_table.client_seed</code>.
     */
    public void setClientSeed(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.users_table.client_seed</code>.
     */
    public String getClientSeed() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.users_table.rank</code>.
     */
    public void setRank(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.users_table.rank</code>.
     */
    public Short getRank() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>public.users_table.server_seed</code>.
     */
    public void setServerSeed(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.users_table.server_seed</code>.
     */
    public String getServerSeed() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.users_table.email</code>.
     */
    public void setEmail(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.users_table.email</code>.
     */
    public String getEmail() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.users_table.ip_address</code>.
     */
    public void setIpAddress(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.users_table.ip_address</code>.
     */
    public String getIpAddress() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.users_table.is_account_non_locked</code>.
     */
    public void setIsAccountNonLocked(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.users_table.is_account_non_locked</code>.
     */
    public Boolean getIsAccountNonLocked() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.users_table.is_multi_account</code>.
     */
    public void setIsMultiAccount(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.users_table.is_multi_account</code>.
     */
    public Boolean getIsMultiAccount() {
        return (Boolean) get(9);
    }

    /**
     * Setter for <code>public.users_table.password</code>.
     */
    public void setPassword(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.users_table.password</code>.
     */
    public String getPassword() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.users_table.birthday</code>.
     */
    public void setBirthday(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.users_table.birthday</code>.
     */
    public String getBirthday() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.users_table.gender</code>.
     */
    public void setGender(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.users_table.gender</code>.
     */
    public String getGender() {
        return (String) get(12);
    }

    /**
     * Setter for <code>public.users_table.nickname</code>.
     */
    public void setNickname(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.users_table.nickname</code>.
     */
    public String getNickname() {
        return (String) get(13);
    }

    /**
     * Setter for <code>public.users_table.registered_at</code>.
     */
    public void setRegisteredAt(Long value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.users_table.registered_at</code>.
     */
    public Long getRegisteredAt() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>public.users_table.role</code>.
     */
    public void setRole(String value) {
        set(15, value);
    }

    /**
     * Getter for <code>public.users_table.role</code>.
     */
    public String getRole() {
        return (String) get(15);
    }

    /**
     * Setter for <code>public.users_table.username</code>.
     */
    public void setUsername(String value) {
        set(16, value);
    }

    /**
     * Getter for <code>public.users_table.username</code>.
     */
    public String getUsername() {
        return (String) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record17 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row17<Long, Long, Short, String, Short, String, String, String, Boolean, Boolean, String, String, String, String, Long, String, String> fieldsRow() {
        return (Row17) super.fieldsRow();
    }

    @Override
    public Row17<Long, Long, Short, String, Short, String, String, String, Boolean, Boolean, String, String, String, String, Long, String, String> valuesRow() {
        return (Row17) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UsersTable.USERS_TABLE.ID;
    }

    @Override
    public Field<Long> field2() {
        return UsersTable.USERS_TABLE.BALANCE;
    }

    @Override
    public Field<Short> field3() {
        return UsersTable.USERS_TABLE.AUTHORIZE_TYPE;
    }

    @Override
    public Field<String> field4() {
        return UsersTable.USERS_TABLE.CLIENT_SEED;
    }

    @Override
    public Field<Short> field5() {
        return UsersTable.USERS_TABLE.RANK;
    }

    @Override
    public Field<String> field6() {
        return UsersTable.USERS_TABLE.SERVER_SEED;
    }

    @Override
    public Field<String> field7() {
        return UsersTable.USERS_TABLE.EMAIL;
    }

    @Override
    public Field<String> field8() {
        return UsersTable.USERS_TABLE.IP_ADDRESS;
    }

    @Override
    public Field<Boolean> field9() {
        return UsersTable.USERS_TABLE.IS_ACCOUNT_NON_LOCKED;
    }

    @Override
    public Field<Boolean> field10() {
        return UsersTable.USERS_TABLE.IS_MULTI_ACCOUNT;
    }

    @Override
    public Field<String> field11() {
        return UsersTable.USERS_TABLE.PASSWORD;
    }

    @Override
    public Field<String> field12() {
        return UsersTable.USERS_TABLE.BIRTHDAY;
    }

    @Override
    public Field<String> field13() {
        return UsersTable.USERS_TABLE.GENDER;
    }

    @Override
    public Field<String> field14() {
        return UsersTable.USERS_TABLE.NICKNAME;
    }

    @Override
    public Field<Long> field15() {
        return UsersTable.USERS_TABLE.REGISTERED_AT;
    }

    @Override
    public Field<String> field16() {
        return UsersTable.USERS_TABLE.ROLE;
    }

    @Override
    public Field<String> field17() {
        return UsersTable.USERS_TABLE.USERNAME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getBalance();
    }

    @Override
    public Short component3() {
        return getAuthorizeType();
    }

    @Override
    public String component4() {
        return getClientSeed();
    }

    @Override
    public Short component5() {
        return getRank();
    }

    @Override
    public String component6() {
        return getServerSeed();
    }

    @Override
    public String component7() {
        return getEmail();
    }

    @Override
    public String component8() {
        return getIpAddress();
    }

    @Override
    public Boolean component9() {
        return getIsAccountNonLocked();
    }

    @Override
    public Boolean component10() {
        return getIsMultiAccount();
    }

    @Override
    public String component11() {
        return getPassword();
    }

    @Override
    public String component12() {
        return getBirthday();
    }

    @Override
    public String component13() {
        return getGender();
    }

    @Override
    public String component14() {
        return getNickname();
    }

    @Override
    public Long component15() {
        return getRegisteredAt();
    }

    @Override
    public String component16() {
        return getRole();
    }

    @Override
    public String component17() {
        return getUsername();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getBalance();
    }

    @Override
    public Short value3() {
        return getAuthorizeType();
    }

    @Override
    public String value4() {
        return getClientSeed();
    }

    @Override
    public Short value5() {
        return getRank();
    }

    @Override
    public String value6() {
        return getServerSeed();
    }

    @Override
    public String value7() {
        return getEmail();
    }

    @Override
    public String value8() {
        return getIpAddress();
    }

    @Override
    public Boolean value9() {
        return getIsAccountNonLocked();
    }

    @Override
    public Boolean value10() {
        return getIsMultiAccount();
    }

    @Override
    public String value11() {
        return getPassword();
    }

    @Override
    public String value12() {
        return getBirthday();
    }

    @Override
    public String value13() {
        return getGender();
    }

    @Override
    public String value14() {
        return getNickname();
    }

    @Override
    public Long value15() {
        return getRegisteredAt();
    }

    @Override
    public String value16() {
        return getRole();
    }

    @Override
    public String value17() {
        return getUsername();
    }

    @Override
    public UsersTableRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UsersTableRecord value2(Long value) {
        setBalance(value);
        return this;
    }

    @Override
    public UsersTableRecord value3(Short value) {
        setAuthorizeType(value);
        return this;
    }

    @Override
    public UsersTableRecord value4(String value) {
        setClientSeed(value);
        return this;
    }

    @Override
    public UsersTableRecord value5(Short value) {
        setRank(value);
        return this;
    }

    @Override
    public UsersTableRecord value6(String value) {
        setServerSeed(value);
        return this;
    }

    @Override
    public UsersTableRecord value7(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersTableRecord value8(String value) {
        setIpAddress(value);
        return this;
    }

    @Override
    public UsersTableRecord value9(Boolean value) {
        setIsAccountNonLocked(value);
        return this;
    }

    @Override
    public UsersTableRecord value10(Boolean value) {
        setIsMultiAccount(value);
        return this;
    }

    @Override
    public UsersTableRecord value11(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersTableRecord value12(String value) {
        setBirthday(value);
        return this;
    }

    @Override
    public UsersTableRecord value13(String value) {
        setGender(value);
        return this;
    }

    @Override
    public UsersTableRecord value14(String value) {
        setNickname(value);
        return this;
    }

    @Override
    public UsersTableRecord value15(Long value) {
        setRegisteredAt(value);
        return this;
    }

    @Override
    public UsersTableRecord value16(String value) {
        setRole(value);
        return this;
    }

    @Override
    public UsersTableRecord value17(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UsersTableRecord values(Long value1, Long value2, Short value3, String value4, Short value5, String value6, String value7, String value8, Boolean value9, Boolean value10, String value11, String value12, String value13, String value14, Long value15, String value16, String value17) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersTableRecord
     */
    public UsersTableRecord() {
        super(UsersTable.USERS_TABLE);
    }

    /**
     * Create a detached, initialised UsersTableRecord
     */
    public UsersTableRecord(Long id, Long balance, Short authorizeType, String clientSeed, Short rank, String serverSeed, String email, String ipAddress, Boolean isAccountNonLocked, Boolean isMultiAccount, String password, String birthday, String gender, String nickname, Long registeredAt, String role, String username) {
        super(UsersTable.USERS_TABLE);

        setId(id);
        setBalance(balance);
        setAuthorizeType(authorizeType);
        setClientSeed(clientSeed);
        setRank(rank);
        setServerSeed(serverSeed);
        setEmail(email);
        setIpAddress(ipAddress);
        setIsAccountNonLocked(isAccountNonLocked);
        setIsMultiAccount(isMultiAccount);
        setPassword(password);
        setBirthday(birthday);
        setGender(gender);
        setNickname(nickname);
        setRegisteredAt(registeredAt);
        setRole(role);
        setUsername(username);
        resetChangedOnNotNull();
    }
}
